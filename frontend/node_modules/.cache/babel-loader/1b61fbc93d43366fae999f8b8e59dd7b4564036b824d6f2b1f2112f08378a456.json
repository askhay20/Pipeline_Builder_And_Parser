{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\frontend\\\\frontend\\\\src\\\\nodes\\\\outputNode.js\",\n  _s = $RefreshSig$();\n// outputNode.js\n\nimport { useState } from 'react';\nimport { GenericNode } from './genericNode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const OutputNode = ({\n  id,\n  data\n}) => {\n  _s();\n  const [currName, setCurrName] = useState((data === null || data === void 0 ? void 0 : data.outputName) || id.replace('customOutput-', 'output_'));\n  const [outputType, setOutputType] = useState(data.outputType || 'Text');\n  const handleNameChange = e => setCurrName(e.target.value);\n  const handleTypeChange = e => setOutputType(e.target.value);\n  return /*#__PURE__*/_jsxDEV(GenericNode, {\n    id: id,\n    data: data,\n    title: \"Output\",\n    leftHandles: [{\n      id: 'value'\n    }],\n    rightHandles: [],\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        display: 'block'\n      },\n      children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: currName,\n        onChange: handleNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        display: 'block'\n      },\n      children: [\"Type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: outputType,\n        onChange: handleTypeChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Text\",\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"File\",\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(OutputNode, \"B7OtEwNf7ml8MnkX7q6OcbfpAhQ=\");\n_c = OutputNode;\nvar _c;\n$RefreshReg$(_c, \"OutputNode\");","map":{"version":3,"names":["useState","GenericNode","jsxDEV","_jsxDEV","OutputNode","id","data","_s","currName","setCurrName","outputName","replace","outputType","setOutputType","handleNameChange","e","target","value","handleTypeChange","title","leftHandles","rightHandles","children","style","display","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Downloads/frontend/frontend/src/nodes/outputNode.js"],"sourcesContent":["// outputNode.js\n\nimport { useState } from 'react';\nimport { GenericNode } from './genericNode';\n\nexport const OutputNode = ({ id, data }) => {\n  const [currName, setCurrName] = useState(data?.outputName || id.replace('customOutput-', 'output_'));\n  const [outputType, setOutputType] = useState(data.outputType || 'Text');\n\n  const handleNameChange = (e) => setCurrName(e.target.value);\n  const handleTypeChange = (e) => setOutputType(e.target.value);\n\n  return (\n    <GenericNode id={id} data={data} title=\"Output\" leftHandles={[{id:'value'}]} rightHandles={[]}>\n      <label style={{display:'block'}}>Name:\n        <input type=\"text\" value={currName} onChange={handleNameChange} />\n      </label>\n      <label style={{display:'block'}}>Type:\n        <select value={outputType} onChange={handleTypeChange}>\n          <option value=\"Text\">Text</option>\n          <option value=\"File\">Image</option>\n        </select>\n      </label>\n    </GenericNode>\n  );\n}\n"],"mappings":";;AAAA;;AAEA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,OAAO,MAAMC,UAAU,GAAGA,CAAC;EAAEC,EAAE;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,CAAAM,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEI,UAAU,KAAIL,EAAE,CAACM,OAAO,CAAC,eAAe,EAAE,SAAS,CAAC,CAAC;EACpG,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAACM,IAAI,CAACM,UAAU,IAAI,MAAM,CAAC;EAEvE,MAAME,gBAAgB,GAAIC,CAAC,IAAKN,WAAW,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC3D,MAAMC,gBAAgB,GAAIH,CAAC,IAAKF,aAAa,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAE7D,oBACEd,OAAA,CAACF,WAAW;IAACI,EAAE,EAAEA,EAAG;IAACC,IAAI,EAAEA,IAAK;IAACa,KAAK,EAAC,QAAQ;IAACC,WAAW,EAAE,CAAC;MAACf,EAAE,EAAC;IAAO,CAAC,CAAE;IAACgB,YAAY,EAAE,EAAG;IAAAC,QAAA,gBAC5FnB,OAAA;MAAOoB,KAAK,EAAE;QAACC,OAAO,EAAC;MAAO,CAAE;MAAAF,QAAA,GAAC,OAC/B,eAAAnB,OAAA;QAAOsB,IAAI,EAAC,MAAM;QAACR,KAAK,EAAET,QAAS;QAACkB,QAAQ,EAAEZ;MAAiB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC,eACR3B,OAAA;MAAOoB,KAAK,EAAE;QAACC,OAAO,EAAC;MAAO,CAAE;MAAAF,QAAA,GAAC,OAC/B,eAAAnB,OAAA;QAAQc,KAAK,EAAEL,UAAW;QAACc,QAAQ,EAAER,gBAAiB;QAAAI,QAAA,gBACpDnB,OAAA;UAAQc,KAAK,EAAC,MAAM;UAAAK,QAAA,EAAC;QAAI;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAClC3B,OAAA;UAAQc,KAAK,EAAC,MAAM;UAAAK,QAAA,EAAC;QAAK;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAElB,CAAC;AAAAvB,EAAA,CApBYH,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}