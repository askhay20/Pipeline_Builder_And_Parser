{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\frontend\\\\frontend\\\\src\\\\submit.js\",\n  _s = $RefreshSig$();\n// // submit.js\n\n// import { useStore } from './store';\n\n// export const SubmitButton = () => {\n//     const nodes = useStore(s=>s.nodes);\n//     const edges = useStore(s=>s.edges);\n\n//     const onSubmit = async () => {\n//         try {\n//             const resp = await fetch('http://127.0.0.1:8000/pipelines/parse', {\n//                 method: 'POST',\n//                 headers: { 'Content-Type': 'application/json' },\n//                 body: JSON.stringify({ nodes, edges }),\n//             });\n//             const json = await resp.json();\n//             alert(`Pipeline parsed:\\nNodes: ${json.num_nodes}\\nEdges: ${json.num_edges}\\nIs DAG: ${json.is_dag}`);\n//         } catch (e) {\n//             alert('Error submitting pipeline: ' + e.message);\n//         }\n//     }\n\n//     return (\n//         <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', padding: 12}}>\n//             <button onClick={onSubmit} style={{padding:'8px 16px', borderRadius:6}}>Submit</button>\n//         </div>\n//     );\n// }\n// submit.js\nimport { useStore } from './store';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SubmitButton = () => {\n  _s();\n  const nodes = useStore(s => s.nodes);\n  const edges = useStore(s => s.edges);\n  const onSubmit = async () => {\n    try {\n      const resp = await fetch('http://127.0.0.1:8000/pipelines/parse', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          nodes,\n          edges\n        })\n      });\n      const json = await resp.json();\n      toast.success(`✅ Pipeline parsed:\\nNodes: ${json.num_nodes}\\nEdges: ${json.num_edges}\\nIs DAG: ${json.is_dag}`, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    } catch (e) {\n      toast.error(`❌ Error submitting pipeline: ${e.message}`, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      padding: 12\n    },\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onSubmit,\n      style: {\n        padding: '8px 16px',\n        borderRadius: 6\n      },\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(SubmitButton, \"4kRKK1g4bG3IdA2bc4wAPICQOio=\", false, function () {\n  return [useStore, useStore];\n});\n_c = SubmitButton;\nvar _c;\n$RefreshReg$(_c, \"SubmitButton\");","map":{"version":3,"names":["useStore","toast","jsxDEV","_jsxDEV","SubmitButton","_s","nodes","s","edges","onSubmit","resp","fetch","method","headers","body","JSON","stringify","json","success","num_nodes","num_edges","is_dag","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","e","error","message","style","display","alignItems","justifyContent","padding","children","onClick","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Downloads/frontend/frontend/src/submit.js"],"sourcesContent":["// // submit.js\n\n// import { useStore } from './store';\n\n// export const SubmitButton = () => {\n//     const nodes = useStore(s=>s.nodes);\n//     const edges = useStore(s=>s.edges);\n\n//     const onSubmit = async () => {\n//         try {\n//             const resp = await fetch('http://127.0.0.1:8000/pipelines/parse', {\n//                 method: 'POST',\n//                 headers: { 'Content-Type': 'application/json' },\n//                 body: JSON.stringify({ nodes, edges }),\n//             });\n//             const json = await resp.json();\n//             alert(`Pipeline parsed:\\nNodes: ${json.num_nodes}\\nEdges: ${json.num_edges}\\nIs DAG: ${json.is_dag}`);\n//         } catch (e) {\n//             alert('Error submitting pipeline: ' + e.message);\n//         }\n//     }\n\n//     return (\n//         <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', padding: 12}}>\n//             <button onClick={onSubmit} style={{padding:'8px 16px', borderRadius:6}}>Submit</button>\n//         </div>\n//     );\n// }\n// submit.js\nimport { useStore } from './store';\nimport { toast } from 'react-toastify';\n\nexport const SubmitButton = () => {\n  const nodes = useStore((s) => s.nodes);\n  const edges = useStore((s) => s.edges);\n\n  const onSubmit = async () => {\n    try {\n      const resp = await fetch('http://127.0.0.1:8000/pipelines/parse', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ nodes, edges }),\n      });\n      const json = await resp.json();\n\n      toast.success(\n        `✅ Pipeline parsed:\\nNodes: ${json.num_nodes}\\nEdges: ${json.num_edges}\\nIs DAG: ${json.is_dag}`,\n        {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        }\n      );\n    } catch (e) {\n      toast.error(`❌ Error submitting pipeline: ${e.message}`, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n  };\n\n  return (\n    <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', padding: 12 }}>\n      <button onClick={onSubmit} style={{ padding: '8px 16px', borderRadius: 6 }}>\n        Submit\n      </button>\n    </div>\n  );\n};\n"],"mappings":";;AAAA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAQ,QAAQ,SAAS;AAClC,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAMC,KAAK,GAAGN,QAAQ,CAAEO,CAAC,IAAKA,CAAC,CAACD,KAAK,CAAC;EACtC,MAAME,KAAK,GAAGR,QAAQ,CAAEO,CAAC,IAAKA,CAAC,CAACC,KAAK,CAAC;EAEtC,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QAChEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEV,KAAK;UAAEE;QAAM,CAAC;MACvC,CAAC,CAAC;MACF,MAAMS,IAAI,GAAG,MAAMP,IAAI,CAACO,IAAI,CAAC,CAAC;MAE9BhB,KAAK,CAACiB,OAAO,CACX,8BAA8BD,IAAI,CAACE,SAAS,YAAYF,IAAI,CAACG,SAAS,aAAaH,IAAI,CAACI,MAAM,EAAE,EAChG;QACEC,QAAQ,EAAE,WAAW;QACrBC,SAAS,EAAE,IAAI;QACfC,eAAe,EAAE,KAAK;QACtBC,YAAY,EAAE,IAAI;QAClBC,YAAY,EAAE,IAAI;QAClBC,SAAS,EAAE,IAAI;QACfC,QAAQ,EAAEC;MACZ,CACF,CAAC;IACH,CAAC,CAAC,OAAOC,CAAC,EAAE;MACV7B,KAAK,CAAC8B,KAAK,CAAC,gCAAgCD,CAAC,CAACE,OAAO,EAAE,EAAE;QACvDV,QAAQ,EAAE,WAAW;QACrBC,SAAS,EAAE,IAAI;QACfC,eAAe,EAAE,KAAK;QACtBC,YAAY,EAAE,IAAI;QAClBC,YAAY,EAAE,IAAI;QAClBC,SAAS,EAAE,IAAI;QACfC,QAAQ,EAAEC;MACZ,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACE1B,OAAA;IAAK8B,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAAC,QAAA,eAC3FnC,OAAA;MAAQoC,OAAO,EAAE9B,QAAS;MAACwB,KAAK,EAAE;QAAEI,OAAO,EAAE,UAAU;QAAEG,YAAY,EAAE;MAAE,CAAE;MAAAF,QAAA,EAAC;IAE5E;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACvC,EAAA,CA7CWD,YAAY;EAAA,QACTJ,QAAQ,EACRA,QAAQ;AAAA;AAAA6C,EAAA,GAFXzC,YAAY;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}